name: coffee-shop-analyzer

services:

  gateway:
    container_name: coffee-gateway
    build:
      context: .
      dockerfile: ./gateway/Dockerfile
    entrypoint: python main.py
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy

#  client:
#    container_name: coffee-client
#    build:
#      context: .
#      dockerfile: ./client/Dockerfile
#    entrypoint: python main.py
#    environment:
#      - PYTHONUNBUFFERED=1
#      - LOGGING_LEVEL=DEBUG
#    volumes:
#      - ./.data:/client/.data
#    networks:
#      - coffee
#    depends_on:
#      - gateway

  # === DEMUX WORKERS ===

  demux_stores:
    image: demux_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/demux/demux_main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=INFO
      - MIDDLEWARE_HOST=rabbitmq
      - FROM=demux_stores
      - TO=stores_source
      - TO_TYPE=EXCHANGE
      - ENTITY_TYPE=Store
    networks:
      - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    scale: 1

  demux_users:
    image: demux_worker
    entrypoint: python /worker/demux/demux_main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=INFO
      - MIDDLEWARE_HOST=rabbitmq
      - FROM=demux_users
      - TO=users_source
      - TO_TYPE=QUEUE
      - ENTITY_TYPE=User
      - REPLICAS=1
    networks:
      - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    scale: 1

  demux_transactions:
    image: demux_worker
    entrypoint: python /worker/demux/demux_main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=INFO
      - MIDDLEWARE_HOST=rabbitmq
      - FROM=demux_transactions
      - TO=transactions_source
      - TO_TYPE=QUEUE
      - ENTITY_TYPE=Transaction
      - REPLICAS=1
    networks:
      - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    scale: 1

  demux_transaction_items:
    image: demux_worker
    entrypoint: python /worker/demux/demux_main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=INFO
      - MIDDLEWARE_HOST=rabbitmq
      - FROM=demux_transaction_items
      - TO=transaction_items_source
      - TO_TYPE=QUEUE
      - ENTITY_TYPE=TransactionItem
      - REPLICAS=1
    networks:
      - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    scale: 1

  demux_menu_items:
    image: demux_worker
    entrypoint: python /worker/demux/demux_main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=INFO
      - MIDDLEWARE_HOST=rabbitmq
      - FROM=demux_menu_items
      - TO=menu_items_source
      - TO_TYPE=EXCHANGE
      - ENTITY_TYPE=MenuItem
    networks:
      - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    scale: 1

  # === QUERY 1: Year, Hour, Amount Filtered Transactions ===

  filter_tx_2024_2025:
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - MIDDLEWARE_HOST=rabbitmq
      - FROM_TYPE=QUEUE
      - FROM=transactions_source
      - TO_TYPE=QUEUE
      - TO=filtered_tx_2024_2025
      - MODULE_NAME=filter_tx_2024_2025
      - REPLICAS=3
    networks:
      - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    scale: 3

  filter_tx_6am_11pm:
    image: filter_worker
    entrypoint: python /worker/filters/filter_main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - MIDDLEWARE_HOST=rabbitmq
      - FROM_TYPE=QUEUE
      - FROM=filtered_tx_2024_2025
      - TO_TYPE=EXCHANGE
      - TO_STRATEGY=FANOUT
      - TO=filtered_tx_6am_11pm
      - MODULE_NAME=filter_tx_6am_11pm
      - REPLICAS=3
    networks:
      - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    scale: 3

  forward_q1:
    image: forward_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/forwarders/forward_main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=INFO
      - MIDDLEWARE_HOST=rabbitmq
      - FROM_TYPE=EXCHANGE
      - FROM_STRATEGY=FANOUT
      - FROM=filtered_tx_6am_11pm
      - TO_TYPE=QUEUE
      - TO=q1_tx_queue
      - REPLICAS=1
    networks:
      - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    scale: 1

  filter_amount:
    image: filter_worker
    entrypoint: python /worker/filters/filter_main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - MIDDLEWARE_HOST=rabbitmq
      - FROM_TYPE=QUEUE
      - FROM=q1_tx_queue
      - TO_TYPE=QUEUE
      - TO=filtered_amount
      - MODULE_NAME=filter_amount
      - REPLICAS=2
    networks:
      - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    scale: 2

  sink_q1:
    image: sink_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/sinks/sink_main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=INFO
      - MIDDLEWARE_HOST=rabbitmq
      - FROM=filtered_amount
      - RESULTS_QUEUE=results_q1
      - MODULE_NAME=sink_q1
      - STREAM_MODE=true
    networks:
      - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy


  # === QUERY 2: Top Products by Period ===

  filter_tx_item_2024_2025:
    image: filter_worker
    entrypoint: python /worker/filters/filter_main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - MIDDLEWARE_HOST=rabbitmq
      - FROM_TYPE=QUEUE
      - FROM=transaction_items_source
      - TO_TYPE=QUEUE
      - TO=filtered_item_amount
      - MODULE_NAME=filter_tx_item_2024_2025
      - REPLICAS=2
    networks:
      - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    scale: 2

  aggregator_period:
    image: aggregator_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/aggregators/aggregator_main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - MIDDLEWARE_HOST=rabbitmq
      - FROM_TYPE=QUEUE
      - FROM=filtered_item_amount
      - TO_TYPE=QUEUE
      - TO=aggregated_item_by_period
      - MODULE_NAME=period_aggregator
      - REPLICAS=2
    networks:
      - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    scale: 2

  merger_period:
    image: merger_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/mergers/merger_main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - MIDDLEWARE_HOST=rabbitmq
      - FROM_TYPE=QUEUE
      - FROM=aggregated_item_by_period
      - TO_TYPE=QUEUE
      - TO=merged_item_by_period
      - MODULE_NAME=merge_period_results
      - REPLICAS=1
    networks:
      - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    scale: 1

  enricher_item:
    image: enricher_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/enrichers/enricher_main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - MIDDLEWARE_HOST=rabbitmq
      - FROM_TYPE=QUEUE
      - FROM=merged_item_by_period
      - ENRICHER_TYPE=EXCHANGE
      - ENRICHER_STRATEGY=FANOUT
      - ENRICHER=menu_items_source
      - TO_TYPE=QUEUE
      - TO=enriched_item_by_period
      - MODULE_NAME=item_enricher
      - REPLICAS=2
    networks:
      - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    scale: 2

  sink_q2:
    image: sink_worker
    entrypoint: python /worker/sinks/sink_main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=INFO
      - MIDDLEWARE_HOST=rabbitmq
      - FROM=enriched_item_by_period
      - RESULTS_QUEUE=results_q2
      - MODULE_NAME=sink_q2
    networks:
      - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy

  # === QUERY 3: Semester TPV by Store ===

  forward_q3:
    image: forward_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/forwarders/forward_main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=INFO
      - MIDDLEWARE_HOST=rabbitmq
      - FROM_TYPE=EXCHANGE
      - FROM_STRATEGY=FANOUT
      - FROM=filtered_tx_6am_11pm
      - TO_TYPE=QUEUE
      - TO=q3_tx_queue
      - REPLICAS=1
    networks:
      - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    scale: 1

  semester_aggregator:
    image: aggregator_worker
    entrypoint: python /worker/aggregators/aggregator_main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - MIDDLEWARE_HOST=rabbitmq
      - FROM_TYPE=QUEUE
      - FROM=q3_tx_queue
      - TO_TYPE=QUEUE
      - TO=aggregated_semester_by_store
      - MODULE_NAME=semester_aggregator
      - REPLICAS=2
    networks:
      - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    scale: 2

  merger_semester_results:
    image: merger_worker
    entrypoint: python /worker/mergers/merger_main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - MIDDLEWARE_HOST=rabbitmq
      - FROM_TYPE=QUEUE
      - FROM=aggregated_semester_by_store
      - TO_TYPE=QUEUE
      - TO=merged_semester_by_store
      - MODULE_NAME=merge_semester_results
      - REPLICAS=1
    networks:
      - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    scale: 1

  enricher_semester_tx:
    image: enricher_worker
    entrypoint: python /worker/enrichers/enricher_main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=DEBUG
      - MIDDLEWARE_HOST=rabbitmq
      - FROM_TYPE=QUEUE
      - FROM=merged_semester_by_store
      - ENRICHER_TYPE=EXCHANGE
      - ENRICHER_STRATEGY=FANOUT
      - ENRICHER=stores_source
      - TO_TYPE=QUEUE
      - TO=enriched_semester_tx
      - MODULE_NAME=store_enricher
      - REPLICAS=2
    networks:
      - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    scale: 2

  sink_q3:
    image: sink_worker
    entrypoint: python /worker/sinks/sink_main.py
    environment:
      - PYTHONUNBUFFERED=1
      - LOGGING_LEVEL=INFO
      - MIDDLEWARE_HOST=rabbitmq
      - FROM=enriched_semester_tx
      - RESULTS_QUEUE=results_q3
      - MODULE_NAME=sink_q3
    networks:
      - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy

  # === Infrastructure ===

  rabbitmq:
    container_name: rabbitmq-container
    image: rabbitmq:4.1.4-management
    volumes:
      - rabbitmq-volume:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_NODENAME=rabbit@rabbitmq
    healthcheck:
      test: |
        rabbitmq-diagnostics -q check_running &&
        rabbitmq-diagnostics -q check_local_alarms &&
        rabbitmq-diagnostics -q check_port_connectivity
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 40s
    ports:
      - "5672:5672"
      - "8080:15672"
    networks:
      - coffee

volumes:
  rabbitmq-volume:

networks:
  coffee:
    driver: bridge
