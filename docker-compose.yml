name: coffee-shop-analyzer
services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:4.1.4-management
    volumes:
    - rabbitmq-volume:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_NODENAME: rabbit@rabbitmq
    networks:
    - coffee
    ports:
    - 5672:5672
    - 8080:15672
    healthcheck:
      test: rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms && rabbitmq-diagnostics -q check_port_connectivity
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 40s
  gateway:
    container_name: gateway
    build:
      context: .
      dockerfile: ./gateway/Dockerfile
    entrypoint: python main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
  client_min:
    build:
      context: .
      dockerfile: ./client/Dockerfile
    entrypoint: python main.py
    networks:
    - coffee
    depends_on:
    - gateway
    environment:
      LOGGING_LEVEL: DEBUG
    volumes:
    - ./.data/dataset_min:/client/.data
    - ./.results:/client/.results
    scale: 3
  transformer_transactions_0:
    container_name: transformer_transactions_0
    image: transformer_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/transformers/transformer_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '3'
      MODULE_NAME: transaction
      FROM: '[["QUEUE", "raw_transactions_batches"]]'
      TO: '[["QUEUE", "transactions_source"]]'
  transformer_transactions_1:
    container_name: transformer_transactions_1
    image: transformer_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/transformers/transformer_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '1'
      REPLICAS: '3'
      MODULE_NAME: transaction
      FROM: '[["QUEUE", "raw_transactions_batches"]]'
      TO: '[["QUEUE", "transactions_source"]]'
  transformer_transactions_2:
    container_name: transformer_transactions_2
    image: transformer_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/transformers/transformer_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '2'
      REPLICAS: '3'
      MODULE_NAME: transaction
      FROM: '[["QUEUE", "raw_transactions_batches"]]'
      TO: '[["QUEUE", "transactions_source"]]'
  q_testing_filter_amount_0:
    container_name: q_testing_filter_amount_0
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '4'
      MODULE_NAME: amount
      FROM: '[["QUEUE", "transactions_source"]]'
      TO: '[["QUEUE", "q1.filtered_amount"]]'
  q_testing_filter_amount_1:
    container_name: q_testing_filter_amount_1
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '1'
      REPLICAS: '4'
      MODULE_NAME: amount
      FROM: '[["QUEUE", "transactions_source"]]'
      TO: '[["QUEUE", "q1.filtered_amount"]]'
  q_testing_filter_amount_2:
    container_name: q_testing_filter_amount_2
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '2'
      REPLICAS: '4'
      MODULE_NAME: amount
      FROM: '[["QUEUE", "transactions_source"]]'
      TO: '[["QUEUE", "q1.filtered_amount"]]'
  q_testing_filter_amount_3:
    container_name: q_testing_filter_amount_3
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '3'
      REPLICAS: '4'
      MODULE_NAME: amount
      FROM: '[["QUEUE", "transactions_source"]]'
      TO: '[["QUEUE", "q1.filtered_amount"]]'
  q_testing_filter_year_0:
    container_name: q_testing_filter_year_0
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '5'
      MODULE_NAME: year
      FROM: '[["QUEUE", "q1.filtered_amount"]]'
      TO: '[["QUEUE", "q1.filtered_year"]]'
  q_testing_filter_year_1:
    container_name: q_testing_filter_year_1
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '1'
      REPLICAS: '5'
      MODULE_NAME: year
      FROM: '[["QUEUE", "q1.filtered_amount"]]'
      TO: '[["QUEUE", "q1.filtered_year"]]'
  q_testing_filter_year_2:
    container_name: q_testing_filter_year_2
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '2'
      REPLICAS: '5'
      MODULE_NAME: year
      FROM: '[["QUEUE", "q1.filtered_amount"]]'
      TO: '[["QUEUE", "q1.filtered_year"]]'
  q_testing_filter_year_3:
    container_name: q_testing_filter_year_3
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '3'
      REPLICAS: '5'
      MODULE_NAME: year
      FROM: '[["QUEUE", "q1.filtered_amount"]]'
      TO: '[["QUEUE", "q1.filtered_year"]]'
  q_testing_filter_year_4:
    container_name: q_testing_filter_year_4
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '4'
      REPLICAS: '5'
      MODULE_NAME: year
      FROM: '[["QUEUE", "q1.filtered_amount"]]'
      TO: '[["QUEUE", "q1.filtered_year"]]'
  q_testing_filter_hour:
    container_name: q_testing_filter_hour
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '1'
      MODULE_NAME: hour
      FROM: '[["QUEUE", "q1.filtered_year"]]'
      TO: '[["QUEUE", "q1.filtered_hour"]]'
volumes:
  rabbitmq-volume: null
networks:
  coffee:
    driver: bridge
