name: coffee-shop-analyzer
services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:4.1.4-management
    volumes:
    - rabbitmq-volume:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_NODENAME: rabbit@rabbitmq
    networks:
    - coffee
    ports:
    - 5672:5672
    - 8080:15672
    healthcheck:
      test: rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms && rabbitmq-diagnostics -q check_port_connectivity
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 40s
  gateway:
    container_name: gateway
    build:
      context: .
      dockerfile: ./gateway/Dockerfile
    entrypoint: python main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
  client:
    build:
      context: .
      dockerfile: ./client/Dockerfile
    entrypoint: python main.py
    networks:
    - coffee
    depends_on:
    - gateway
    environment:
      LOGGING_LEVEL: DEBUG
    volumes:
    - ./.data/dataset_min:/client/.data
    - ./.results:/client/.results
    scale: 10
  transformer_menu_items:
    container_name: transformer_menu_items
    image: transformer_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/transformers/transformer_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '1'
      MODULE_NAME: menu
      FROM: '[["QUEUE", "raw_menu_items_batches"]]'
      TO: '[["EXCHANGE", "menu_items_source", "FANOUT", ["common"]]]'
  transformer_stores:
    container_name: transformer_stores
    image: transformer_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/transformers/transformer_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '1'
      MODULE_NAME: store
      FROM: '[["QUEUE", "raw_stores_batches"]]'
      TO: '[["EXCHANGE", "stores_source", "FANOUT", ["common"]]]'
  transformer_users_0:
    container_name: transformer_users_0
    image: transformer_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/transformers/transformer_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '3'
      MODULE_NAME: user
      FROM: '[["QUEUE", "raw_users_batches"]]'
      TO: '[["QUEUE", "users_source"]]'
  transformer_users_1:
    container_name: transformer_users_1
    image: transformer_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/transformers/transformer_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '1'
      REPLICAS: '3'
      MODULE_NAME: user
      FROM: '[["QUEUE", "raw_users_batches"]]'
      TO: '[["QUEUE", "users_source"]]'
  transformer_users_2:
    container_name: transformer_users_2
    image: transformer_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/transformers/transformer_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '2'
      REPLICAS: '3'
      MODULE_NAME: user
      FROM: '[["QUEUE", "raw_users_batches"]]'
      TO: '[["QUEUE", "users_source"]]'
  transformer_transactions_0:
    container_name: transformer_transactions_0
    image: transformer_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/transformers/transformer_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '3'
      MODULE_NAME: transaction
      FROM: '[["QUEUE", "raw_transactions_batches"]]'
      TO: '[["QUEUE", "transactions_source"]]'
  transformer_transactions_1:
    container_name: transformer_transactions_1
    image: transformer_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/transformers/transformer_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '1'
      REPLICAS: '3'
      MODULE_NAME: transaction
      FROM: '[["QUEUE", "raw_transactions_batches"]]'
      TO: '[["QUEUE", "transactions_source"]]'
  transformer_transactions_2:
    container_name: transformer_transactions_2
    image: transformer_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/transformers/transformer_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '2'
      REPLICAS: '3'
      MODULE_NAME: transaction
      FROM: '[["QUEUE", "raw_transactions_batches"]]'
      TO: '[["QUEUE", "transactions_source"]]'
  transformer_transaction_items_0:
    container_name: transformer_transaction_items_0
    image: transformer_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/transformers/transformer_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '5'
      MODULE_NAME: transaction_item
      FROM: '[["QUEUE", "raw_transaction_items_batches"]]'
      TO: '[["QUEUE", "transaction_items_source"]]'
  transformer_transaction_items_1:
    container_name: transformer_transaction_items_1
    image: transformer_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/transformers/transformer_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '1'
      REPLICAS: '5'
      MODULE_NAME: transaction_item
      FROM: '[["QUEUE", "raw_transaction_items_batches"]]'
      TO: '[["QUEUE", "transaction_items_source"]]'
  transformer_transaction_items_2:
    container_name: transformer_transaction_items_2
    image: transformer_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/transformers/transformer_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '2'
      REPLICAS: '5'
      MODULE_NAME: transaction_item
      FROM: '[["QUEUE", "raw_transaction_items_batches"]]'
      TO: '[["QUEUE", "transaction_items_source"]]'
  transformer_transaction_items_3:
    container_name: transformer_transaction_items_3
    image: transformer_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/transformers/transformer_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '3'
      REPLICAS: '5'
      MODULE_NAME: transaction_item
      FROM: '[["QUEUE", "raw_transaction_items_batches"]]'
      TO: '[["QUEUE", "transaction_items_source"]]'
  transformer_transaction_items_4:
    container_name: transformer_transaction_items_4
    image: transformer_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/transformers/transformer_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '4'
      REPLICAS: '5'
      MODULE_NAME: transaction_item
      FROM: '[["QUEUE", "raw_transaction_items_batches"]]'
      TO: '[["QUEUE", "transaction_items_source"]]'
  q1_filter_year_0:
    container_name: q1_filter_year_0
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '3'
      MODULE_NAME: year
      FROM: '[["QUEUE", "transactions_source"]]'
      TO: '[["QUEUE", "q1.filtered_year"], ["QUEUE", "q4.filtered_year"]]'
  q1_filter_year_1:
    container_name: q1_filter_year_1
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '1'
      REPLICAS: '3'
      MODULE_NAME: year
      FROM: '[["QUEUE", "transactions_source"]]'
      TO: '[["QUEUE", "q1.filtered_year"], ["QUEUE", "q4.filtered_year"]]'
  q1_filter_year_2:
    container_name: q1_filter_year_2
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '2'
      REPLICAS: '3'
      MODULE_NAME: year
      FROM: '[["QUEUE", "transactions_source"]]'
      TO: '[["QUEUE", "q1.filtered_year"], ["QUEUE", "q4.filtered_year"]]'
  q1_filter_hour_0:
    container_name: q1_filter_hour_0
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '3'
      MODULE_NAME: hour
      FROM: '[["QUEUE", "q1.filtered_year"]]'
      TO: '[["QUEUE", "q1.filtered_hour"], ["QUEUE", "q3.filtered_hour"]]'
  q1_filter_hour_1:
    container_name: q1_filter_hour_1
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '1'
      REPLICAS: '3'
      MODULE_NAME: hour
      FROM: '[["QUEUE", "q1.filtered_year"]]'
      TO: '[["QUEUE", "q1.filtered_hour"], ["QUEUE", "q3.filtered_hour"]]'
  q1_filter_hour_2:
    container_name: q1_filter_hour_2
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '2'
      REPLICAS: '3'
      MODULE_NAME: hour
      FROM: '[["QUEUE", "q1.filtered_year"]]'
      TO: '[["QUEUE", "q1.filtered_hour"], ["QUEUE", "q3.filtered_hour"]]'
  q1_filter_amount_0:
    container_name: q1_filter_amount_0
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '2'
      MODULE_NAME: amount
      FROM: '[["QUEUE", "q1.filtered_hour"]]'
      TO: '[["QUEUE", "q1.filtered_amount"]]'
  q1_filter_amount_1:
    container_name: q1_filter_amount_1
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '1'
      REPLICAS: '2'
      MODULE_NAME: amount
      FROM: '[["QUEUE", "q1.filtered_hour"]]'
      TO: '[["QUEUE", "q1.filtered_amount"]]'
  q1_sink:
    container_name: q1_sink
    image: sink_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/sinks/sink_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '1'
      MODULE_NAME: sink_q1
      FROM: '[["QUEUE", "q1.filtered_amount"]]'
      TO: '[["QUEUE", "results_q1"]]'
  q2_filter_items_0:
    container_name: q2_filter_items_0
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '3'
      MODULE_NAME: item_year
      FROM: '[["QUEUE", "transaction_items_source"]]'
      TO: '[["QUEUE", "q2.filtered_items"]]'
  q2_filter_items_1:
    container_name: q2_filter_items_1
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '1'
      REPLICAS: '3'
      MODULE_NAME: item_year
      FROM: '[["QUEUE", "transaction_items_source"]]'
      TO: '[["QUEUE", "q2.filtered_items"]]'
  q2_filter_items_2:
    container_name: q2_filter_items_2
    image: filter_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/filters/filter_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '2'
      REPLICAS: '3'
      MODULE_NAME: item_year
      FROM: '[["QUEUE", "transaction_items_source"]]'
      TO: '[["QUEUE", "q2.filtered_items"]]'
  q2_aggregate_period_0:
    container_name: q2_aggregate_period_0
    image: aggregator_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/aggregators/aggregator_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '5'
      MODULE_NAME: period_agg
      FROM: '[["QUEUE", "q2.filtered_items"]]'
      TO: '[["QUEUE", "q2.aggregated_period"]]'
  q2_aggregate_period_1:
    container_name: q2_aggregate_period_1
    image: aggregator_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/aggregators/aggregator_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '1'
      REPLICAS: '5'
      MODULE_NAME: period_agg
      FROM: '[["QUEUE", "q2.filtered_items"]]'
      TO: '[["QUEUE", "q2.aggregated_period"]]'
  q2_aggregate_period_2:
    container_name: q2_aggregate_period_2
    image: aggregator_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/aggregators/aggregator_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '2'
      REPLICAS: '5'
      MODULE_NAME: period_agg
      FROM: '[["QUEUE", "q2.filtered_items"]]'
      TO: '[["QUEUE", "q2.aggregated_period"]]'
  q2_aggregate_period_3:
    container_name: q2_aggregate_period_3
    image: aggregator_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/aggregators/aggregator_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '3'
      REPLICAS: '5'
      MODULE_NAME: period_agg
      FROM: '[["QUEUE", "q2.filtered_items"]]'
      TO: '[["QUEUE", "q2.aggregated_period"]]'
  q2_aggregate_period_4:
    container_name: q2_aggregate_period_4
    image: aggregator_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/aggregators/aggregator_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '4'
      REPLICAS: '5'
      MODULE_NAME: period_agg
      FROM: '[["QUEUE", "q2.filtered_items"]]'
      TO: '[["QUEUE", "q2.aggregated_period"]]'
  q2_merge_period:
    container_name: q2_merge_period
    image: merger_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/mergers/merger_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '1'
      MODULE_NAME: period_merge
      FROM: '[["QUEUE", "q2.aggregated_period"]]'
      TO: '[["QUEUE", "q2.merged_period"]]'
  q2_enrich_items:
    container_name: q2_enrich_items
    image: enricher_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/enrichers/enricher_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '1'
      MODULE_NAME: item_enricher
      FROM: '[["QUEUE", "q2.merged_period"]]'
      TO: '[["QUEUE", "q2.enriched_items"]]'
      ENRICHER: '[["EXCHANGE", "menu_items_source", "FANOUT", ["common"]]]'
  q2_sink:
    container_name: q2_sink
    image: sink_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/sinks/sink_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '1'
      MODULE_NAME: sink_q2
      FROM: '[["QUEUE", "q2.enriched_items"]]'
      TO: '[["QUEUE", "results_q2"]]'
  q3_aggregate_semester_0:
    container_name: q3_aggregate_semester_0
    image: aggregator_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/aggregators/aggregator_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '3'
      MODULE_NAME: semester_agg
      FROM: '[["QUEUE", "q3.filtered_hour"]]'
      TO: '[["QUEUE", "q3.aggregated_semester"]]'
  q3_aggregate_semester_1:
    container_name: q3_aggregate_semester_1
    image: aggregator_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/aggregators/aggregator_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '1'
      REPLICAS: '3'
      MODULE_NAME: semester_agg
      FROM: '[["QUEUE", "q3.filtered_hour"]]'
      TO: '[["QUEUE", "q3.aggregated_semester"]]'
  q3_aggregate_semester_2:
    container_name: q3_aggregate_semester_2
    image: aggregator_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/aggregators/aggregator_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '2'
      REPLICAS: '3'
      MODULE_NAME: semester_agg
      FROM: '[["QUEUE", "q3.filtered_hour"]]'
      TO: '[["QUEUE", "q3.aggregated_semester"]]'
  q3_merge_semester:
    container_name: q3_merge_semester
    image: merger_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/mergers/merger_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '1'
      MODULE_NAME: semester_merge
      FROM: '[["QUEUE", "q3.aggregated_semester"]]'
      TO: '[["QUEUE", "q3.merged_semester"]]'
  q3_enrich_stores:
    container_name: q3_enrich_stores
    image: enricher_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/enrichers/enricher_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '1'
      MODULE_NAME: store_enricher
      FROM: '[["QUEUE", "q3.merged_semester"]]'
      TO: '[["QUEUE", "q3.enriched_stores"]]'
      ENRICHER: '[["EXCHANGE", "stores_source", "FANOUT", ["common"]]]'
  q3_sink:
    container_name: q3_sink
    image: sink_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/sinks/sink_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '1'
      MODULE_NAME: sink_q3
      FROM: '[["QUEUE", "q3.enriched_stores"]]'
      TO: '[["QUEUE", "results_q3"]]'
  q4_route_transactions_0:
    container_name: q4_route_transactions_0
    image: router_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/router/router_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '3'
      MODULE_NAME: router_transactions_q4
      FROM: '[["QUEUE", "q4.filtered_year"]]'
      TO: '[["EXCHANGE", "q4.routed_tx", "DIRECT", ["q4.routed_0", "q4.routed_1", "q4.routed_2", "q4.routed_3", "q4.routed_4"]]]'
  q4_route_transactions_1:
    container_name: q4_route_transactions_1
    image: router_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/router/router_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '1'
      REPLICAS: '3'
      MODULE_NAME: router_transactions_q4
      FROM: '[["QUEUE", "q4.filtered_year"]]'
      TO: '[["EXCHANGE", "q4.routed_tx", "DIRECT", ["q4.routed_0", "q4.routed_1", "q4.routed_2", "q4.routed_3", "q4.routed_4"]]]'
  q4_route_transactions_2:
    container_name: q4_route_transactions_2
    image: router_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/router/router_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '2'
      REPLICAS: '3'
      MODULE_NAME: router_transactions_q4
      FROM: '[["QUEUE", "q4.filtered_year"]]'
      TO: '[["EXCHANGE", "q4.routed_tx", "DIRECT", ["q4.routed_0", "q4.routed_1", "q4.routed_2", "q4.routed_3", "q4.routed_4"]]]'
  q4_aggregate_users_0:
    container_name: q4_aggregate_users_0
    image: aggregator_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/aggregators/aggregator_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '5'
      MODULE_NAME: user_purchase_aggregator
      FROM: '[["EXCHANGE", "q4.routed_tx", "DIRECT", ["q4.routed_0"]]]'
      TO: '[["EXCHANGE", "q4.aggregated_users", "FANOUT", ["common"]]]'
  q4_aggregate_users_1:
    container_name: q4_aggregate_users_1
    image: aggregator_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/aggregators/aggregator_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '1'
      REPLICAS: '5'
      MODULE_NAME: user_purchase_aggregator
      FROM: '[["EXCHANGE", "q4.routed_tx", "DIRECT", ["q4.routed_1"]]]'
      TO: '[["EXCHANGE", "q4.aggregated_users", "FANOUT", ["common"]]]'
  q4_aggregate_users_2:
    container_name: q4_aggregate_users_2
    image: aggregator_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/aggregators/aggregator_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '2'
      REPLICAS: '5'
      MODULE_NAME: user_purchase_aggregator
      FROM: '[["EXCHANGE", "q4.routed_tx", "DIRECT", ["q4.routed_2"]]]'
      TO: '[["EXCHANGE", "q4.aggregated_users", "FANOUT", ["common"]]]'
  q4_aggregate_users_3:
    container_name: q4_aggregate_users_3
    image: aggregator_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/aggregators/aggregator_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '3'
      REPLICAS: '5'
      MODULE_NAME: user_purchase_aggregator
      FROM: '[["EXCHANGE", "q4.routed_tx", "DIRECT", ["q4.routed_3"]]]'
      TO: '[["EXCHANGE", "q4.aggregated_users", "FANOUT", ["common"]]]'
  q4_aggregate_users_4:
    container_name: q4_aggregate_users_4
    image: aggregator_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/aggregators/aggregator_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '4'
      REPLICAS: '5'
      MODULE_NAME: user_purchase_aggregator
      FROM: '[["EXCHANGE", "q4.routed_tx", "DIRECT", ["q4.routed_4"]]]'
      TO: '[["EXCHANGE", "q4.aggregated_users", "FANOUT", ["common"]]]'
  q4_enrich_users_0:
    container_name: q4_enrich_users_0
    image: enricher_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/enrichers/enricher_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '3'
      MODULE_NAME: user_enricher
      FROM: '[["QUEUE", "users_source"]]'
      TO: '[["QUEUE", "q4.enriched_users"]]'
      ENRICHER: '[["EXCHANGE", "q4.aggregated_users", "FANOUT", ["common"]]]'
  q4_enrich_users_1:
    container_name: q4_enrich_users_1
    image: enricher_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/enrichers/enricher_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '1'
      REPLICAS: '3'
      MODULE_NAME: user_enricher
      FROM: '[["QUEUE", "users_source"]]'
      TO: '[["QUEUE", "q4.enriched_users"]]'
      ENRICHER: '[["EXCHANGE", "q4.aggregated_users", "FANOUT", ["common"]]]'
  q4_enrich_users_2:
    container_name: q4_enrich_users_2
    image: enricher_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/enrichers/enricher_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '2'
      REPLICAS: '3'
      MODULE_NAME: user_enricher
      FROM: '[["QUEUE", "users_source"]]'
      TO: '[["QUEUE", "q4.enriched_users"]]'
      ENRICHER: '[["EXCHANGE", "q4.aggregated_users", "FANOUT", ["common"]]]'
  q4_merge_top3:
    container_name: q4_merge_top3
    image: merger_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/mergers/merger_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '1'
      MODULE_NAME: top_3
      FROM: '[["QUEUE", "q4.enriched_users"]]'
      TO: '[["QUEUE", "q4.merged_top3"]]'
  q4_enrich_stores:
    container_name: q4_enrich_stores
    image: enricher_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/enrichers/enricher_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '1'
      MODULE_NAME: store_enricher_q4
      FROM: '[["QUEUE", "q4.merged_top3"]]'
      TO: '[["QUEUE", "q4.enriched_stores"]]'
      ENRICHER: '[["EXCHANGE", "stores_source", "FANOUT", ["common"]]]'
  q4_sink:
    container_name: q4_sink
    image: sink_worker
    build:
      context: .
      dockerfile: ./worker/Dockerfile
    entrypoint: python /worker/sinks/sink_main.py
    networks:
    - coffee
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      REPLICA_ID: '0'
      REPLICAS: '1'
      MODULE_NAME: sink_q4
      FROM: '[["QUEUE", "q4.enriched_stores"]]'
      TO: '[["QUEUE", "results_q4"]]'
volumes:
  rabbitmq-volume: null
networks:
  coffee:
    driver: bridge
